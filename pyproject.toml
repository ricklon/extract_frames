[project]
name = "extract_frames"
version = "0.1.0"
description = "A CLI tool to extract high-quality frames from videos"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["video", "frame extraction", "CLI"]
authors = [
  { name = "Rick", email = "ricklon@fubarlabs.org" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.10",
]
dependencies = [
  "click>=8.0.0",
  "opencv-python>=4.0.0",
  "numpy>=1.20.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0",
  "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/ricklon/extract_frames"
Repository = "https://github.com/ricklon/extract_frames.git"
Issues = "https://github.com/ricklon/extract_frames/issues"

[project.scripts]
extract_frames = "extract_frames.extract_frames:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/extract_frames"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["extract_frames"]

[tool.ruff.format]
# Use double quotes for strings.
quote-style = "double"

# Indent with spaces, rather than tabs.
indent-style = "space"

# Use "\n" line endings for all files.
line-ending = "lf"